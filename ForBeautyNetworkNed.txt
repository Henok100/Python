package src.NED;

import inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator;
import inet.node.contract.INetworkNode;
import inet.physicallayer.wireless.common.contract.packetlevel.IRadioMedium;
import inet.node.inet.ArdusimHost;
import inet.applications.udpapp.Trigger;
import inet.environment.common.PhysicalEnvironment;
import inet.common.geometry.common.OsgGeographicCoordinateSystem;
import inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium;
import inet.visualizer.common.IntegratedVisualizer;

network Network
{
    parameters:
        int numUAVs @prompt("Number of clients:") = default(2);
        @display("bgb=159.3,133.5");
    submodules:
        rt: RealTime {
            @display("p=24.6,45");
        }
        configurator: Ipv4NetworkConfigurator {
            @display("p=24.6,114.600006");
        }
        radioMedium: <default("Ieee80211DimensionalRadioMedium")> like IRadioMedium {
            @display("p=24.6,66.9");
        }
        visualizer: IntegratedVisualizer {
            parameters:
                @display("p=24.6,18.300001");
        }
        physicalEnvironment: PhysicalEnvironment {
            @display("p=23.7,92.1");
        }

        //<default("AdhocHost")> like INetworkNode 
        host[numUAVs]: ArdusimHost {
            @display("p=107.4,78.9;is=l");
        }

        trig: Trigger {
            @display("p=130.8,45.3;is=vl");
            gates:
                out[parent.numUAVs];
        }

    connections allowunconnected:
        for i=0..(numUAVs - 1) {
            trig.out[i] --> host[i].trigger;
        }
}

